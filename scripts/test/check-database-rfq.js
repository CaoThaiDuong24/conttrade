// Ki·ªÉm tra database tr·ª±c ti·∫øp cho RFQ received
const { execSync } = require('child_process');

async function checkDatabase() {
  try {
    console.log('=== KI·ªÇM TRA DATABASE RFQ ===\n');
    
    // Check if we have any RFQs at all
    console.log('üîç Checking total RFQs in database...');
    
    const checkQuery = `
      SELECT 
        r.id,
        r.status,
        r.purpose,
        r.quantity,
        r.buyer_id,
        r.listing_id,
        r.submitted_at,
        u_buyer.email as buyer_email,
        u_buyer.display_name as buyer_name,
        l.title as listing_title,
        l.seller_user_id,
        u_seller.email as seller_email,
        u_seller.display_name as seller_name
      FROM rfqs r
      LEFT JOIN users u_buyer ON r.buyer_id = u_buyer.id
      LEFT JOIN listings l ON r.listing_id = l.id
      LEFT JOIN users u_seller ON l.seller_user_id = u_seller.id
      ORDER BY r.submitted_at DESC
      LIMIT 10;
    `;
    
    // Create a simple SQL script file
    const sqlScript = `
-- Check RFQ data
\\c icontexchange

${checkQuery}
    `;
    
    // Write to temp file and execute
    require('fs').writeFileSync('temp-check-rfq.sql', sqlScript);
    
    console.log('SQL Query ƒë∆∞·ª£c t·∫°o. C·∫ßn ch·∫°y manual:');
    console.log('1. M·ªü PostgreSQL command line');
    console.log('2. Ch·∫°y: psql -U postgres -f temp-check-rfq.sql');
    console.log('\nHo·∫∑c ki·ªÉm tra qua Prisma Studio ho·∫∑c pgAdmin');
    
    // Alternative: Check through backend API patterns
    console.log('\n=== PH√ÇN T√çCH V·∫§N ƒê·ªÄ ===');
    console.log('C√≥ th·ªÉ c√≥ c√°c v·∫•n ƒë·ªÅ sau:');
    console.log('1. Kh√¥ng c√≥ RFQ n√†o trong database');
    console.log('2. RFQ c√≥ nh∆∞ng kh√¥ng match seller_user_id');
    console.log('3. Backend query logic c√≥ v·∫•n ƒë·ªÅ');
    console.log('4. Authentication issue v·ªõi JWT/cookies');
    
    console.log('\nüîß GI·∫¢I PH√ÅP:');
    console.log('1. T·∫°o test RFQ data');
    console.log('2. Fix backend query logic');
    console.log('3. Verify seller-listing relationships');
    
  } catch (error) {
    console.error('Error:', error.message);
  }
}

checkDatabase();